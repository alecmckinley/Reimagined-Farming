package me.alecmckinley.reimaginedfarming;
import com.gmail.filoghost.holographicdisplays.api.Hologram;
import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.plugin.java.JavaPlugin;
import java.io.File;
public class ReimaginedFarming extends JavaPlugin implements Listener {
 
 
    public Hologram hologram;
 
    private File workingDir;
 
    public void onEnable() {
        workingDir = getDataFolder();
        workingDir.mkdirs();
 
        getLogger().info(getDescription().getName() + " has been enabled");
        Bukkit.getServer().getPluginManager().registerEvents(this, this);
    }
 
    public void onDisable() {
        getLogger().info(getDescription().getName() + " has been disabled");
    }
 
    @EventHandler
    public void PlayerInteract(PlayerInteractEvent e) {
 
        Player p = e.getPlayer();
 
        if (e.getClickedBlock().getType() == Material.SOIL) {
            System.out.println("Yep that's soil");
            if (PlantTypes.fromName(e.getItem().getType().name()) != null) {
                System.out.println("Yep that's soil 2");
                Material seed = e.getItem().getType();
                Location plotLocation = e.getClickedBlock().getLocation();
                FarmPlot plot = new FarmPlot(plotLocation, System.currentTimeMillis());
                FileUtils.writeJSON(plot.getData(), new File(workingDir, plot.getUUID().toString() + ".json"));
            }
        }
        return;
 
        // /Check Duration
        /*
        if ((e.getItem().getType() == Material.IRON_HOE)) {
            if (e.getAction() == Action.RIGHT_CLICK_BLOCK) {
                if (e.getClickedBlock().getType() == Material.SOIL) {
 
                    double farmLocationX = e.getClickedBlock().getX();
                    double farmLocationY = e.getClickedBlock().getY();
                    double farmLocationZ = e.getClickedBlock().getZ();
                    farmLocationY += 3;
                    farmLocationX += 0.5;
                    farmLocationZ += 0.5;
                    Location farmLocation = new Location(e.getClickedBlock().getLocation().getWorld(), farmLocationX, farmLocationY, farmLocationZ);
 
                    hologram = HologramsAPI.createHologram(this, farmLocation);
 
                    String text = "Welcome to MERICA!";
                    hologram.appendTextLine(text);
 
                    this.getServer().getScheduler().scheduleSyncDelayedTask(this, new Runnable() {
                        public void run() {
 
                            hologram.delete();
 
                        }
                    }, 60L);
 
 
                    return;
                }
                */
    }
}
/**
 * Created by Alec McKinley on 11/14/2015.
 */
package me.alecmckinley.reimaginedfarming;
 
import java.util.HashMap;
import java.util.Map;
 
/**
 * An enum of all material IDs accepted by the official server and client
 */
 
public enum PlantTypes {
    TALL_GRASS(1),//grass
    WHEAT(5),//wheat
    SEEDS(5),//wheat
    CARROT(10),//carrot
    CARROT_ITEM(10),//carrot
    POTATO(10),//potato
    POTATO_ITEM(10),//potato
    SUGAR_CANE(15),//sugar
    SUGAR_CANE_BLOCK(15),//sugar
    PUMPKIN_SEEDS(20),//pumpkin
    PUMPKIN_STEMS(20),//pumpkin
    NETHER_WART(40);//nether wart
 
    private static Map<String, PlantTypes> nameMap = new HashMap<>();
 
    static {
        for (PlantTypes plant : PlantTypes.values()) {
            nameMap.put(plant.name(), plant);
        }
    }
 
    private int growthTime;
 
    PlantTypes(int time) {
        growthTime = time;
    }
 
    public int getGrowthTime() {
        return growthTime;
    }
 
    public static PlantTypes fromName(String name) {
        return nameMap.get(name);
    }
 
}
package me.alecmckinley.reimaginedfarming;
 
import org.bukkit.Location;
import org.json.simple.JSONObject;
 
import java.util.Map;
import java.util.UUID;
 
@SuppressWarnings("unchecked")
public class FarmPlot {
 
    private JSONObject data = new JSONObject();
 
    public FarmPlot(Location location, long time) {
        Map<String, Object> serializedLoaction = location.serialize();
        data.put("uuid", UUID.randomUUID().toString());
        data.put("location", serializedLoaction);
        data.put("timePlanted", time);
    }
 
    public JSONObject getData() {
        return data;
    }
 
    public UUID getUUID() {
        return UUID.fromString((String) data.get("uuid"));
    }
 
    public Location getLocation() {
        Map<String, Object> serializedLocation = (Map<String, Object>) data.get("location");
        return Location.deserialize(serializedLocation);
    }
 
    public long getPlantTime() {
        return Integer.toUnsignedLong((int) data.get("timePlanted"));
    }
 package me.alecmckinley.reimaginedfarming;
 
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
 
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
 
public class FileUtils {
 
    public static void writeJSON(JSONObject config, File file) {
        try {
            FileWriter writer = new FileWriter(file);
            writer.write(config.toJSONString());
            writer.flush();
            writer.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
 
    public static JSONObject readJSON(File file) {
        if (file.exists()) {
            JSONParser parser = new JSONParser();
            try {
                FileReader reader = new FileReader(file);
                JSONObject fileContents = (JSONObject) parser.parse(reader);
                reader.close();
                return fileContents;
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return new JSONObject();
    }
 
}
